1.
---Добавить EventBus - издатель публикует данные определенного типа на шину, подписчики работают на получение типа.---
После получение данных от клиента, парсим Json, выставляем событие (типа <inputData>) на EventBus о получении данных.
EventBus будет зависимостью сревиса в котором хранятся List<Device>. Сервис подпишетя на EventBus типа <inputData>
и будет всегда оповещен о получении данных, сможет выбрать нужный Device и передать ему данные.


2.
---Добавить систему передачи данных от клиента через REST api.---
     * Добавить контроллер DeviceExchangeController
	   POST - передача данных от клиента в json формате
	   GET - получение последних переданных данных
	   PUT - команды для Divice
После передачи данных чрезе POST запрос эта json строка стохраняется в репозитории (с временным штампом, для проверки валидности, например 30 мин валидна), 
ее клиент может получить обратно через GET запрос.
В случае перезагрузки сервера из репозитория вынимается последняя строка, проверяется на валидносит по времени и считается за дефолтные данные для Devices.


3.
---Добавить json сериализатор, разработать формат json для передачи данных от клиента ---


4.
Запускать централизованно StartCycleExchange, как BackGround